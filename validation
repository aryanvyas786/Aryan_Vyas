    import React, { useEffect, useState } from 'react';
    import { io } from 'socket.io-client';
    import './ChatRoom.css';
    import { useNavigate } from 'react-router-dom';

    const socket = io('http://localhost:4001');

    interface Message {
        id: number;
        roomId: number;
        senderId: number;
        content: string;
    }

    const ChatRoom: React.FC<{ userType: '1' | '2'; userId: number }> = ({ userType, userId }) => {
        const navigate = useNavigate();
        const [messages, setMessages] = useState<Message[]>([]);
        const [content, setContent] = useState('');
        const [currentRoomId, setCurrentRoomId] = useState<number | null>(null);
        const agencyId = userType === '1' ? 1 : null;
        const jobSeekerId = userType === '2' ? 1 : null;

        useEffect(() => {
            socket.on('newMessage', (message: Message) => {
                setMessages(prevMessages => [...prevMessages, message]);
            });

            socket.on('chatRoomCreated', (chatRoom: { id: number }) => {
                setCurrentRoomId(chatRoom.id);
                socket.emit('joinRoom', chatRoom.id);
            });

            return () => {
                socket.off('newMessage');
                socket.off('chatRoomCreated');
            };
        }, []);

        const createChatRoom = () => {
            const roomData = userType === '1'
                ? { jobSeekerId: userId, agencyId }
                : { agencyId: userId, jobSeekerId };
            socket.emit('createChatRoom', roomData);
        };

        const sendMessage = () => {
            if (content.trim() && currentRoomId) {
                socket.emit('sendMessage', { roomId: currentRoomId, senderId: userId, content });
                setContent('');
            }
        };

        return (
                <div className="chat-room">
                    <h1>{userType === '1' ? 'Job Seeker' : 'Agency'} Chat Room</h1>
                    <button onClick={createChatRoom}>Create Chat Room</button>
                    <div className="message-container">
                        {messages.map((message) => (
                            <div className="message" key={message.id}>
                                <strong>User {message.senderId}:</strong> {message.content}
                            </div>
                        ))}
                    </div>
                    <input
                        type="text"
                        value={content}
                        onChange={(e) => setContent(e.target.value)}
                        placeholder="Type your message..."
                    />
                    <button onClick={sendMessage}>Send</button>
                    <button onClick={() => navigate("/dashboard")}>Go To Dashboard</button>
                    <button onClick={() => navigate("/login")} className='login'>Logout</button>
                </div>
            );
    };

    export default ChatRoom;
